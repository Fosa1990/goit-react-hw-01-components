{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Transactions/Transactions.module.css","components/Section/Section.js","components/Profile/ProfileStats.js","components/Profile/Profile.js","helpers/generators/getRandomColor.js","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transactions/TransactionItem.js","components/Transactions/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","classNames","children","className","ProfileItem","followers","views","likes","styles","stats","label","quantity","defaultProps","Profile","username","tag","location","avatar","profile","description","src","alt","name","ProfileStats","getRandomColor","Math","floor","random","StatisticItem","item","style","backgroundColor","percentage","id","Statistics","title","statistics","statsList","map","FriendListItem","isOnline","statusOnline","statusOffline","width","FriendList","friendsData","length","friendList","TransactionItem","type","amount","currency","TransactionHistory","transactionData","transactionHistory","App","userData","statisticData","friendListData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,OAAS,wBAAwB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,gBCA5UD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,UAAY,8BAA8B,MAAQ,0BAA0B,WAAa,iC,gBCAzLD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,OAAS,2BAA2B,aAAe,iCAAiC,cAAgB,oC,4PCAlOD,EAAOC,QAAU,CAAC,mBAAqB,2C,+7FCSxBC,EARC,SAAC,GAAmC,IAAD,IAAhCC,kBAAgC,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SAClC,OAAO,yBAASC,UAAWF,EAApB,SAAiCC,K,wBCApCE,EAAc,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACvC,OACE,qBAAIJ,UAAWK,IAAOC,MAAtB,UACE,+BACE,sBAAMN,UAAWK,IAAOE,MAAxB,uBACA,sBAAMP,UAAWK,IAAOG,SAAxB,SAAmCN,OAErC,+BACE,sBAAMF,UAAWK,IAAOE,MAAxB,mBACA,sBAAMP,UAAWK,IAAOG,SAAxB,SAAmCL,OAErC,+BACE,sBAAMH,UAAWK,IAAOE,MAAxB,mBACA,sBAAMP,UAAWK,IAAOG,SAAxB,SAAmCJ,WAM3CH,EAAYQ,aAAe,CACzBP,UAAW,IACXC,MAAO,IACPC,MAAO,KAWMH,QChCTS,EAAU,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQR,EAAY,EAAZA,MAClD,OACE,sBAAKN,UAAWK,IAAOU,QAAvB,UACE,sBAAKf,UAAWK,IAAOW,YAAvB,UACE,qBAAKC,IAAKH,EAAQI,IAAKP,EAAUX,UAAWK,IAAOS,SACnD,mBAAGd,UAAWK,IAAOc,KAArB,SAA4BR,IAC5B,oBAAGX,UAAWK,IAAOO,IAArB,cAA4BA,KAC5B,mBAAGZ,UAAWK,IAAOQ,SAArB,SAAgCA,OAGlC,cAACO,EAAD,eAAkBd,QAKxBI,EAAQD,aAAe,CACrBE,SAAU,OACVC,IAAK,SACLC,SAAU,cACVC,OAAQ,2DAWKJ,Q,gBC1BAW,MARf,WAKE,MADsB,OAHdC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGW,IAF3BF,KAAKC,MAAsB,IAAhBD,KAAKE,UAEqB,IADrCF,KAAKC,MAAsB,IAAhBD,KAAKE,UAC+B,KCAnDC,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,qBAEE1B,UAAWK,IAAOqB,KAClBC,MAAO,CACLC,gBAAiBP,KAJrB,UAOE,sBAAMrB,UAAWK,IAAOE,MAAxB,SAAgCmB,EAAKnB,QACrC,uBAAMP,UAAWK,IAAOwB,WAAxB,UAAqCH,EAAKG,WAA1C,SAPKH,EAAKI,KAYhBL,EAAchB,aAAe,CAC3BF,MAAO,QACPsB,WAAY,GAUCJ,QC3BTM,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAO1B,EAAY,EAAZA,MAC3B,OACE,0BAASN,UAAWK,IAAO4B,WAA3B,UACGD,GAAS,oBAAIhC,UAAWK,IAAO2B,MAAtB,SAA8BA,IAExC,oBAAIhC,UAAWK,IAAO6B,UAAtB,SACG5B,EAAM6B,KAAI,SAAAT,GAAI,OAAID,EAAc,CAAEC,kBAM3CK,EAAWtB,aAAe,CACxBuB,MAAO,SAQMD,Q,gBCtBTK,EAAiB,SAAC,GAAgC,IAA9BtB,EAA6B,EAA7BA,OAAQK,EAAqB,EAArBA,KAAMkB,EAAe,EAAfA,SACtC,OACE,qBAAIrC,UAAWK,IAAOqB,KAAtB,UACE,sBACE1B,UAAWqC,EAAWhC,IAAOiC,aAAejC,IAAOkC,gBAErD,qBAAKvC,UAAWK,IAAOS,OAAQG,IAAKH,EAAQI,IAAKC,EAAMqB,MAAM,OAC7D,mBAAGxC,UAAWK,IAAOc,KAArB,SAA4BA,QAKlCiB,EAAe3B,aAAe,CAC5BK,OAAQ,0DACRK,KAAM,OACNkB,UAAU,GASGD,QCEAK,EAzBI,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACpB,OACEA,EAAYC,OAAS,GACnB,oBAAI3C,UAAWK,IAAOuC,WAAtB,SACGF,EAAYP,KAAI,gBAAGL,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,KAAMkB,EAArB,EAAqBA,SAArB,OACf,cAAC,EAAD,CAEEvB,OAAQA,EACRK,KAAMA,EACNkB,SAAUA,GAHLP,SCRXe,EAAkB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACvC,OACE,+BACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,QAKXH,EAAgBpC,aAAe,CAC7BqC,KAAM,UACNC,OAAQ,OACRC,SAAU,QASGH,Q,gBCaAI,EAjCY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAC5B,OACE,wBAAOlD,UAAWK,IAAO8C,mBAAzB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAgBf,KAAI,gBAAGL,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACnB,cAAC,EAAD,CAEEF,KAAMA,EACNC,OAAQA,EACRC,SAAUA,GAHLlB,Y,8BCUFsB,MAjBf,WACE,OACE,eAAC,EAAD,CAAStD,WAAW,WAApB,UACE,cAAC,EAAD,CACEa,SAAU0C,EAAS1C,SACnBC,IAAKyC,EAASzC,IACdC,SAAUwC,EAASxC,SACnBC,OAAQuC,EAASvC,OACjBR,MAAO+C,EAAS/C,QAElB,cAAC,EAAD,CAAY0B,MAAM,eAAe1B,MAAOgD,IACxC,cAAC,EAAD,CAAYZ,YAAaa,IACzB,cAAC,EAAD,CAAoBL,gBAAiBA,QCX5BM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.30d7e479.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2m1QG\",\"description\":\"Profile_description__3Rl8V\",\"name\":\"Profile_name__2blJ3\",\"tag\":\"Profile_tag__2rvKT\",\"location\":\"Profile_location__349ap\",\"avatar\":\"Profile_avatar__1sz31\",\"userInfo\":\"Profile_userInfo__2Zh78\",\"stats\":\"Profile_stats__1kuzm\",\"label\":\"Profile_label__18R7d\",\"quantity\":\"Profile_quantity__1SPY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1vA8H\",\"title\":\"Statistics_title__103wR\",\"statsList\":\"Statistics_statsList__9Wnky\",\"label\":\"Statistics_label__2-33_\",\"percentage\":\"Statistics_percentage__3DbEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__cDw99\",\"item\":\"FriendList_item__IJrnE\",\"name\":\"FriendList_name__XHcww\",\"avatar\":\"FriendList_avatar__3znmP\",\"statusOnline\":\"FriendList_statusOnline__WbgyS\",\"statusOffline\":\"FriendList_statusOffline__EaDIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__3GAwK\"};","import PropTypes from 'prop-types';\n\nconst Section = ({ classNames = '', children }) => {\n  return <section className={classNames}>{children}</section>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styles from './Profile.module.css';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({ followers, views, likes }) => {\n  return (\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  );\n};\n\nProfileItem.defaultProps = {\n  followers: '0',\n  views: '0',\n  likes: '0',\n};\n\nProfileItem.propTypes = {\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default ProfileItem;\n","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\nimport ProfileStats from './ProfileStats';\n\nconst Profile = ({ username, tag, location, avatar, stats }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={username} className={styles.avatar} />\n        <p className={styles.name}>{username}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ProfileStats {...stats} />\n    </div>\n  );\n};\n\nProfile.defaultProps = {\n  username: 'User',\n  tag: 'No tag',\n  location: 'No location',\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n};\n\nProfile.propTypes = {\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape().isRequired,\n};\n\nexport default Profile;\n","function getRandomColor() {\r\n  let r = Math.floor(Math.random() * 256);\r\n  let g = Math.floor(Math.random() * 256);\r\n  let b = Math.floor(Math.random() * 256);\r\n  let backgroundColor = 'rgb(' + r + ',' + g + ',' + b + ')';\r\n  return backgroundColor;\r\n}\r\n\r\nexport default getRandomColor;\r\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport getRandomColor from '../../helpers/generators/getRandomColor';\n\nconst StatisticItem = ({ item }) => {\n  return (\n    <li\n      key={item.id}\n      className={styles.item}\n      style={{\n        backgroundColor: getRandomColor(),\n      }}\n    >\n      <span className={styles.label}>{item.label}</span>\n      <span className={styles.percentage}>{item.percentage}%</span>\n    </li>\n  );\n};\n\nStatisticItem.defaultProps = {\n  label: 'Label',\n  percentage: 0,\n};\n\nStatisticItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  }),\n};\nexport default StatisticItem;\n","import PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport StatisticItem from './StatisticItem';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statsList}>\n        {stats.map(item => StatisticItem({ item }))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.defaultProps = {\n  title: 'Title',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <li className={styles.item}>\n      <span\n        className={isOnline ? styles.statusOnline : styles.statusOffline}\n      ></span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.defaultProps = {\n  avatar: 'https://cdn-icons-png.flaticon.com/512/2922/2922506.png',\n  name: 'User',\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friendsData }) => {\n  return (\n    friendsData.length > 0 && (\n      <ul className={styles.friendList}>\n        {friendsData.map(({ id, avatar, name, isOnline }) => (\n          <FriendListItem\n            key={id}\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n          />\n        ))}\n      </ul>\n    )\n  );\n};\n\nFriendList.propTypes = {\n  friendsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\n\nconst TransactionItem = ({ type, amount, currency }) => {\n  return (\n    <tr>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </tr>\n  );\n};\n\nTransactionItem.defaultProps = {\n  type: 'Unknown',\n  amount: 'NONE',\n  currency: 'NONE',\n};\n\nTransactionItem.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TransactionItem;\n","import PropTypes from 'prop-types';\nimport TransactionItem from './TransactionItem';\nimport styles from './Transactions.module.css';\n\nconst TransactionHistory = ({ transactionData }) => {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {transactionData.map(({ id, type, amount, currency }) => (\n          <TransactionItem\n            key={id}\n            type={type}\n            amount={amount}\n            currency={currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactionData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Section from './components/Section/Section';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/Transactions/TransactionHistory';\nimport userData from './data/user.json';\nimport statisticData from './data/statistics.json';\nimport friendListData from './data/friends.json';\nimport transactionData from './data/transactions.json';\n\nfunction App() {\n  return (\n    <Section classNames=\"userCard\">\n      <Profile\n        username={userData.username}\n        tag={userData.tag}\n        location={userData.location}\n        avatar={userData.avatar}\n        stats={userData.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticData} />\n      <FriendList friendsData={friendListData} />\n      <TransactionHistory transactionData={transactionData} />\n    </Section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}